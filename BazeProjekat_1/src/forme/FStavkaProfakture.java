/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import dbb.DBBroker;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Proizvod;
import model.STATUS;
import model.StavkaProfakture;
import modeli.tabele.ModelTabeleStavkeProfakture;


/**
 *
 * @author Marija
 */
public class FStavkaProfakture extends javax.swing.JFrame {

    DBBroker dbb = new DBBroker();
    FProfaktura fp;

    public FStavkaProfakture(String flag, FProfaktura fp) {
        initComponents();
        this.fp = fp;
        popuniComboBoxProizvod();

        if (flag.equals("kreiraj")) {
            btnIzmeni.setVisible(false);
            jtfReklamacijaID.setText(fp.vratiProfakturaID());
            
        }
        if (flag.equals("izmeni")) {
            btnSacuvaj.setVisible(false);
            jtfStavkaID.setEnabled(false);
            jtfReklamacijaID.setText(fp.vratiProfakturaID());
            postaviStavku(((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).vratiStavkuProfakture(fp.getTblStavkaProfakture().getSelectedRow()));

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfStavkaID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfKolicina = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbProizvod = new javax.swing.JComboBox<Object>();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtfReklamacijaID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Stavka ID");

        jtfStavkaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfStavkaIDActionPerformed(evt);
            }
        });

        jLabel4.setText("Kolicina");

        jLabel5.setText("Proizvod");

        cmbProizvod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProizvodActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jLabel2.setText("Reklamacija ID");

        jtfReklamacijaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfReklamacijaIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfReklamacijaID, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jtfStavkaID, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSacuvaj)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfKolicina)
                                    .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnIzmeni)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfReklamacijaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfStavkaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbProizvod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        if (jtfKolicina.getText().isEmpty() || jtfStavkaID.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Nisu popunjena sva polja", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String rb = jtfStavkaID.getText().trim();

        if (!rb.matches("[1-9][0-9]*")) {
            JOptionPane.showMessageDialog(null, "ID mora da bude broj", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean postojiRB = false;
        for (StavkaProfakture sp : fp.getStavkeProfakture()) {
            if (sp.getStatus() == null || sp.getStatus() != STATUS.OBRISI) { ///proveriti ovo za obrisi
                if (sp.getStavkaProfaktureID()== Integer.parseInt(jtfStavkaID.getText())) {
                    postojiRB = true;
                    break;
                }
            }
        }
        if (postojiRB) {
            JOptionPane.showMessageDialog(this, "Već postoji stavka sa datim Rednim Brojem", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        StavkaProfakture sp = new StavkaProfakture();
        Proizvod a = (Proizvod) cmbProizvod.getSelectedItem();
        sp.setStavkaProfaktureID(Integer.parseInt(jtfStavkaID.getText()));
        sp.setKolicina(Integer.parseInt(jtfKolicina.getText()));
        sp.setProfakturaID(Integer.parseInt(jtfReklamacijaID.getText()));
        sp.setProizvodID(a);
        
        if (fp.getOperacija() == FProfaktura.Operacija.KREIRANJE) {

            boolean postojiUTabeliID = false;
            for (StavkaProfakture stavp : ((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).vratiStavke()) {
                if (stavp.getStavkaProfaktureID()== sp.getStavkaProfaktureID()) {
                    postojiUTabeliID = true;
                    break;
                }
            }
            if (postojiUTabeliID) {
                JOptionPane.showMessageDialog(this, "Već postoji stavka sa datim rednim brojem", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            ((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).dodajStavkuProfakture(sp);
            fp.getStavkeProfakture().add(sp);
            dispose();
        }
        if (fp.getOperacija() == FProfaktura.Operacija.IZMENA) {
            sp.setStatus(STATUS.DODAJ);
            fp.getStavkeProfakture().add(sp);
            ((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).dodajStavkuProfakture(sp);
            dispose();
        }
        fp.getStavkeProfakture().forEach((sp1) -> {
            System.out.println(sp1.getStavkaProfaktureID()+ " " + sp1.getStatus());
        });
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        if (jtfStavkaID.getText().isEmpty() || jtfKolicina.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Nisu popunjena sva polja", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        StavkaProfakture sp = new StavkaProfakture();
        Proizvod a = (Proizvod) cmbProizvod.getSelectedItem();

        sp.setStavkaProfaktureID(Integer.parseInt(jtfStavkaID.getText().trim()));
        sp.setKolicina(Integer.parseInt(jtfKolicina.getText().trim()));
        sp.setProfakturaID(Integer.parseInt(jtfReklamacijaID.getText()));
        sp.setProizvodID(a);
        
        if (fp.getOperacija() == FProfaktura.Operacija.IZMENA) {
            if (((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).vratiStavkuProfakture(fp.getTblStavkaProfakture().getSelectedRow()).getStatus() == null) {
                sp.setStatus(STATUS.IZMENI);
            }
        }

        for (int i = 0; i < fp.getStavkeProfakture().size(); i++) {
            if (fp.getStavkeProfakture().get(i).getStavkaProfaktureID()== ((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).vratiStavkuProfakture(fp.getTblStavkaProfakture().getSelectedRow()).getStavkaProfaktureID()) {
                fp.izmeniStavkuProfakture(sp, fp.getTblStavkaProfakture().getSelectedRow());
            }
        }

        ((ModelTabeleStavkeProfakture) fp.getTblStavkaProfakture().getModel()).izmeniStavkuProfakture(sp, fp.getTblStavkaProfakture().getSelectedRow());

        dispose();

        fp.getStavkeProfakture().forEach((sp1) -> {
            System.out.println(sp1.getStavkaProfaktureID()+ " " + sp1.getStatus());
        });

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void jtfStavkaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfStavkaIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfStavkaIDActionPerformed

    private void jtfReklamacijaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfReklamacijaIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfReklamacijaIDActionPerformed

    private void cmbProizvodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProizvodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProizvodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Object> cmbProizvod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jtfKolicina;
    private javax.swing.JTextField jtfReklamacijaID;
    private javax.swing.JTextField jtfStavkaID;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxProizvod() {
        try {
            cmbProizvod.removeAllItems();
            dbb.uspostaviKonekciju();
            
            List<Proizvod> lista = dbb.vratiSveProizvode();
             

            dbb.potvrdiTransakciju();
            dbb.raskiniKonekciju();
            for (Proizvod p : lista) {
                cmbProizvod.addItem(p);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FStavkaProfakture.class.getName()).log(Level.SEVERE, null, ex);
            dbb.ponistiTransakciju();
            dbb.raskiniKonekciju();
        }
    }

    private void postaviStavku(StavkaProfakture sp) {
        jtfStavkaID.setText(sp.getStavkaProfaktureID()+ "");
        jtfKolicina.setText(sp.getKolicina() + "");


        for (int i = 0; i < cmbProizvod.getItemCount(); i++) {
            if (cmbProizvod.getItemAt(i).toString().equals(sp.getProizvodID().getNaziv())) {
                System.out.println("pronasao artikal");
                cmbProizvod.setSelectedItem(cmbProizvod.getItemAt(i));
            }
        }
    }
}
